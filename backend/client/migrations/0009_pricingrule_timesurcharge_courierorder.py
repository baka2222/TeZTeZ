# Generated by Django 5.2.2 on 2025-07-23 14:45

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('client', '0008_client_next_ability_job'),
    ]

    operations = [
        migrations.CreateModel(
            name='PricingRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Название правила')),
                ('min_distance', models.FloatField(default=0, help_text='Включительно', verbose_name='Минимальная дистанция (км)')),
                ('max_distance', models.FloatField(default=0, help_text='Исключительно; 0 = без лимита', verbose_name='Максимальная дистанция (км)')),
                ('base_price', models.DecimalField(decimal_places=2, default=0, max_digits=8, verbose_name='Базовая цена (сом)')),
                ('per_km_price', models.DecimalField(decimal_places=2, default=0, max_digits=8, verbose_name='Цена за км (сом)')),
                ('multiplier', models.DecimalField(decimal_places=2, default=1, help_text='Дополнительная наценка', max_digits=4, verbose_name='Множитель')),
            ],
            options={
                'verbose_name': 'Правило ценообразования',
                'verbose_name_plural': 'Правила ценообразования',
                'ordering': ['min_distance'],
            },
        ),
        migrations.CreateModel(
            name='TimeSurcharge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Название наценки')),
                ('start_time', models.TimeField(verbose_name='Начало периода')),
                ('end_time', models.TimeField(verbose_name='Конец периода')),
                ('multiplier', models.DecimalField(decimal_places=2, default=1, max_digits=4, verbose_name='Множитель')),
            ],
            options={
                'verbose_name': 'Наценка по времени',
                'verbose_name_plural': 'Наценки по времени',
            },
        ),
        migrations.CreateModel(
            name='CourierOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('point_a_lat', models.FloatField(verbose_name='Широта точки А')),
                ('point_a_lng', models.FloatField(verbose_name='Долгота точки А')),
                ('point_b_lat', models.FloatField(verbose_name='Широта точки Б')),
                ('point_b_lng', models.FloatField(verbose_name='Долгота точки Б')),
                ('comment', models.TextField(blank=True, verbose_name='Комментарий')),
                ('distance_km', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Расстояние (км)')),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Цена (сом)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='delivery_orders', to='client.client', verbose_name='Клиент')),
                ('courier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_deliveries', to='client.client', verbose_name='Курьер')),
            ],
            options={
                'verbose_name': 'Курьерский заказ',
                'verbose_name_plural': 'Курьерские заказы',
                'ordering': ['-created_at'],
            },
        ),
    ]
